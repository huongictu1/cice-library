CREATE FUNCTION [dbo].[GetConsolidatedValues]
(
    @Barcode NVARCHAR(50),
    @Month INT,
    @Year INT
)
RETURNS TABLE
AS
RETURN (
    SELECT
        c.Barcode,
        dbo.LastMonthStock(c.Barcode, @Month, @Year) AS LastMonthStock,
        dbo.SumInput(c.Barcode, @Month, @Year) AS TotalInput,
        dbo.SumOutput(c.Barcode, @Month, @Year) AS TotalOutput,
        dbo.GetActual(c.Barcode, @Month, @Year) AS ActualInventory,
        dbo.Get_Reason(c.Barcode, @Month, @Year) AS Reason,
        dbo.GetSmaxALL2(c.Barcode, @Month, @Year) AS STT,
        dbo.GetStatus(c.Barcode, @Month, @Year) AS [Status],
        CONVERT(VARCHAR, dbo.GetDateApproval(c.Barcode, @Month, @Year), 121) AS DateApproval,
        dbo.GetPICConfirm(c.Barcode, @Month, @Year) AS Pic
    FROM [dbo].[ChemicalStore] c
    LEFT JOIN ChemicalList cs ON c.Barcode = cs.Barcode
    LEFT JOIN Dept d ON c.Dept = d.ID 
    LEFT JOIN Unit u ON c.Unit = u.ID
    WHERE 
        (MONTH(DateCurrent) = @Month AND YEAR(DateCurrent) = @Year)
);

CREATE PROC [dbo].[Report2ALL](
    @Month AS INT,
    @Year AS INT,
    @Dept AS INT,
    @Stock AS INT
)
AS
BEGIN
    SELECT 
        ROW_NUMBER() OVER (ORDER BY t.Barcode) AS No,
        t.ChemicalName,
        t.ProduceCode,
        t.Dept,
        t.Barcode,
        t.ControlNo,
        t.Unit,
        t.LastMonthStock,
        t.TotalInput,
        t.TotalOutput,
        t.ActualInventory,
        dbo.MinIsZero((t.LastMonthStock + t.TotalInput) - t.TotalOutput) AS CalculationStock,
        ROUND(t.ActualInventory - (t.LastMonthStock + t.TotalInput - t.TotalOutput), 3) AS Differed,
        t.Reason,
        t.STT,
        t.[Status],
        t.DateApproval,
        t.Pic,
        t.ID,
        t.StockID
    FROM [dbo].[GetConsolidatedValues](@Barcode, @Month, @Year) t;
END
